diff -ruN cmake-3.2.2/Modules/FindCUDA.cmake cmake-3.2.2-new/Modules/FindCUDA.cmake
--- cmake-3.2.2/Modules/FindCUDA.cmake	2015-04-13 11:09:00.000000000 -0600
+++ cmake-3.2.2-new/Modules/FindCUDA.cmake	2015-05-02 15:08:03.622306512 -0600
@@ -901,6 +901,7 @@
         "x${arg}" STREQUAL "xEXCLUDE_FROM_ALL" OR
         "x${arg}" STREQUAL "xSTATIC" OR
         "x${arg}" STREQUAL "xSHARED" OR
+        "x${arg}" STREQUAL "xOBJECT" OR
         "x${arg}" STREQUAL "xMODULE"
         )
       list(APPEND ${_cmake_options} ${arg})
@@ -1525,9 +1526,11 @@
   # variable will have been defined.
   CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS("${link_file}" ${cuda_target} "${_options}" "${${cuda_target}_SEPARABLE_COMPILATION_OBJECTS}")
 
-  target_link_libraries(${cuda_target}
-    ${CUDA_LIBRARIES}
-    )
+  if(NOT "${_cmake_options}" STREQUAL "OBJECT")
+    target_link_libraries(${cuda_target}
+      ${CUDA_LIBRARIES}
+      )
+  endif()
 
   # We need to set the linker language based on what the expected generated file
   # would be. CUDA_C_OR_CXX is computed based on CUDA_HOST_COMPILATION_CPP.
diff -ruN cmake-3.2.2/Modules/Platform/Linux.cmake cmake-3.2.2-new/Modules/Platform/Linux.cmake
--- cmake-3.2.2/Modules/Platform/Linux.cmake	2015-04-13 11:09:00.000000000 -0600
+++ cmake-3.2.2-new/Modules/Platform/Linux.cmake	2015-05-02 15:05:44.330390931 -0600
@@ -2,7 +2,7 @@
 set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG "-Wl,-rpath,")
 set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP ":")
 set(CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG "-Wl,-rpath-link,")
-set(CMAKE_SHARED_LIBRARY_SONAME_C_FLAG "-Wl,-soname,")
+set(CMAKE_SHARED_LIBRARY_SONAME_C_FLAG "-Wl,-soname=")
 set(CMAKE_EXE_EXPORTS_C_FLAG "-Wl,--export-dynamic")
 
 # Shared libraries with no builtin soname may not be linked safely by
diff -ruN cmake-3.2.2/Modules/Platform/Linux-Intel-C.cmake cmake-3.2.2-new/Modules/Platform/Linux-Intel-C.cmake
--- cmake-3.2.2/Modules/Platform/Linux-Intel-C.cmake	2015-04-13 11:09:00.000000000 -0600
+++ cmake-3.2.2-new/Modules/Platform/Linux-Intel-C.cmake	2015-05-02 15:05:44.331390909 -0600
@@ -1,3 +1,5 @@
 include(Platform/Linux-Intel)
+# Fix for Intel 13.1.0.20130607 on hopper.nersc.gov
+set(CMAKE_SHARED_LIBRARY_SONAME_C_FLAG "-Wl,-soname=")
 __linux_compiler_intel(C)
 set(CMAKE_INCLUDE_SYSTEM_FLAG_C "-isystem ")
diff -ruN cmake-3.2.2/Modules/Platform/Linux-Intel.cmake cmake-3.2.2-new/Modules/Platform/Linux-Intel.cmake
--- cmake-3.2.2/Modules/Platform/Linux-Intel.cmake	2015-04-13 11:09:00.000000000 -0600
+++ cmake-3.2.2-new/Modules/Platform/Linux-Intel.cmake	2015-05-02 15:05:44.331390909 -0600
@@ -38,7 +38,8 @@
 
   # We pass this for historical reasons.  Projects may have
   # executables that use dlopen but do not set ENABLE_EXPORTS.
-  set(CMAKE_SHARED_LIBRARY_LINK_${lang}_FLAGS "-rdynamic")
+# This causes build failure on hopper (Cray)
+  # set(CMAKE_SHARED_LIBRARY_LINK_${lang}_FLAGS "-rdynamic")
 
   if(XIAR)
     # INTERPROCEDURAL_OPTIMIZATION
